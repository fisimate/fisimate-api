// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               String             @id @default(uuid())
  fullname         String
  email            String             @unique
  nis              String?            @unique
  password         String?
  roleId           String             @map("role_id")
  createdAt        DateTime           @default(now()) @map("created_at")
  updatedAt        DateTime           @default(now()) @map("updated_at")
  refreshTokens    RefreshToken[]
  role             Role               @relation(fields: [roleId], references: [id])
  UserQuizResponse UserQuizResponse[]
}

model RefreshToken {
  id           String   @id @default(uuid())
  refreshToken String   @map("refresh_token")
  userId       String   @map("user_id")
  createdAt    DateTime @default(now()) @map("created_at")
  updatedAt    DateTime @default(now()) @map("updated_at")
  user         User     @relation(fields: [userId], references: [id])
}

model Role {
  id    String @id @default(uuid())
  name  String
  users User[]
}

model Chapter {
  id            String         @id @default(uuid())
  name          String
  slug          String
  createdAt     DateTime       @default(now()) @map("created_at")
  updatedAt     DateTime       @default(now()) @map("updated_at")
  examBanks     ExamBank[]
  materialBanks MaterialBank[]
  formulaBanks  FormulaBank[]
  simulations   Simulation[]
}

model ExamBank {
  id        String   @id @default(uuid())
  title     String
  icon      String
  filePath  String   @map("file_path")
  chapterId String   @map("chapter_id")
  chapter   Chapter  @relation(fields: [chapterId], references: [id])
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @map("updated_at")
}

model MaterialBank {
  id        String   @id @default(uuid())
  title     String
  icon      String
  filePath  String   @map("file_path")
  chapterId String   @map("chapter_id")
  chapter   Chapter  @relation(fields: [chapterId], references: [id])
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @map("updated_at")
}

model FormulaBank {
  id        String   @id @default(uuid())
  title     String
  icon      String
  filePath  String   @map("file_path")
  chapterId String   @map("chapter_id")
  chapter   Chapter  @relation(fields: [chapterId], references: [id])
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @map("updated_at")
}

model Simulation {
  id        String     @id @default(uuid())
  title     String
  icon      String
  chapterId String     @map("chapter_id")
  chapter   Chapter    @relation(fields: [chapterId], references: [id])
  createdAt DateTime   @default(now()) @map("created_at")
  updatedAt DateTime   @default(now()) @map("updated_at")
  materials Material[]
  quizzes   Quiz[]
}

model Material {
  id           String     @id @default(uuid())
  filePath     String     @map("file_path")
  simulationId String     @map("simulation_id")
  simulation   Simulation @relation(fields: [simulationId], references: [id])
  createdAt    DateTime   @default(now()) @map("created_at")
  updatedAt    DateTime   @default(now()) @map("updated_at")
}

model Quiz {
  id                String             @id @default(uuid())
  simulationId      String             @map("simulation_id")
  simulation        Simulation         @relation(fields: [simulationId], references: [id])
  createdAt         DateTime           @default(now()) @map("created_at")
  updatedAt         DateTime           @default(now()) @map("updated_at")
  quizReviews       QuizReview[]
  userQuizResponses UserQuizResponse[]
  questions         Question[]
}

model Question {
  id          String       @id @default(uuid())
  text        String
  quizId      String       @map("quiz_id")
  quiz        Quiz         @relation(fields: [quizId], references: [id])
  createdAt   DateTime     @default(now()) @map("created_at")
  updatedAt   DateTime     @default(now()) @map("updated_at")
  quizOptions QuizOption[]
}

model QuizOption {
  id         String   @id @default(uuid())
  text       String
  isCorrect  Boolean  @map("is_correct")
  questionId String   @map("question_id")
  question   Question @relation(fields: [questionId], references: [id])
  createdAt  DateTime @default(now()) @map("created_at")
  updatedAt  DateTime @default(now()) @map("updated_at")
  quizId     String?
}

model QuizReview {
  id        String   @id @default(uuid())
  filePath  String   @map("file_path")
  quizId    String   @map("quiz_id")
  quiz      Quiz     @relation(fields: [quizId], references: [id])
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @map("updated_at")
}

model UserQuizResponse {
  id        String   @id @default(uuid())
  score     Float
  quizId    String   @map("quiz_id")
  quiz      Quiz     @relation(fields: [quizId], references: [id])
  userId    String   @map("user_id")
  user      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @map("updated_at")
}
